@model Events4All.Web.Models.EventsViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create Event</h2>


@using (Html.BeginForm("Create", "Events", "POST"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>Events</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "width:200px" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @maxlength = "2", @style = "width:50px" } })*@
            @Html.DropDownListFor(m => m.State, new SelectList(Enum.GetValues(typeof(Events4All.DB.Models.State))), "")
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @maxlength = "5", @style = "width:75px" } })
            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Web, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Web, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Web, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.TwitterHandle, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Twitter Handle", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.TwitterHandle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TwitterHandle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeStart, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Start Time", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "width:225px",
                @type = "datetime-local"} })
            @Html.ValidationMessageFor(model => model.TimeStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeStop, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("End Time", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeStop, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "width:225px",
                @type = "datetime-local"} })
            @Html.ValidationMessageFor(model => model.TimeStop, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TicketPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Ticket Price", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.TicketPrice, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", @style = "width:100px" } })
            @Html.ValidationMessageFor(model => model.TicketPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HashTag, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Hash Tag", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.HashTag, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "width:200px" } })
            @Html.ValidationMessageFor(model => model.HashTag, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AttendeeCap, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Hash Tag", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.AttendeeCap, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "width:200px" } })
            @Html.ValidationMessageFor(model => model.AttendeeCap, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.Hidden("IsActive", "Value")
    @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @Html.Hidden("CreatedDate", "Value")
    @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @Html.Hidden("CreatedBy", "Value")
    @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
